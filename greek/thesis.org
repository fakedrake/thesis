#+TITLE:       Extracting relational data from Wikipedia
#+AUTHOR:      Chris Perivolaropoulos
#+DATE:        Tuesday 9q May 2016
#+EMAIL:       cperivol@csail.mit.edu
#+DESCRIPTION: Making sense of semi structured data in wikipedia.
#+KEYWORDS:
#+LATEX_CLASS: report
#+LANGUAGE:    en
#+OPTIONS:     H:2 num:t toc:t \n:nil @:t ::t |:t ^:t f:t TeX:t
#+STARTUP:     showall
#+MACRO:       ref
#+LATEX_HEADER: \usepackage{fontspec}
#+LATEX_HEADER: \setmainfont{Times}

* Περίληψη

  MiT InfoLab's START (SynTactic Analysis using Reversible Transforma-
  tions) είναι το πρώτο διαδικτυακό σύστημα παγκοσμίως που βασίζεται
  σε ερώτηση και απάντηση. Για την πρόσβαση σε περισσότερες πηγές
  δεδομένων χρησιμοποιεί το Omnibase, μια "εικονική βάση δεδομένων"
  που παρέχει πρόσβαση σε πολλαπλές πηγές στο διαδίκτυο . Αναπτύξαμε
  Wikipedia-Base για την παροχή παρόμοιου τρόπου δεδομένων όπως το
  Omnibase για το START. Με στόχο να αποκτηθεί για να αποκτηθεί
  πρόσβαση σε μη δομημένες και ημιδομημένες πληροφορίες στη
  Wikipedia. Στο πλαίσιο αυτού του στόχου επίσης δημιουργήσαμε το
  wikipedia-mirror, ένα πρόγραμμα που δημιουργεί κλώνους της Wikipedia
  που μπορεί να τρέχουν τοπικά, με αποτέέσμα να παρέχει έλεγχο και
  απεριόριστη πρόσβαση στο σύνολο των δεδομένων της wikpedia χωρίς να
  εξαρτάται ή να καταχράται το wikipedia.org.

  MiT InfoLab's START (SynTactic Analysis using Reversible
  Transformations) is the world's first web-based question answering
  system. For accessing most data sources it takes advantage of
  Omnibase, the /"virtual database"/ providing uniform access to
  multiple sources on the web. We developed WikipediaBase to provide
  an Omnibase-like way for START to access unstructured and
  semi-structured information in Wikipedia. As part of this goal we
  also created wikipedia-mirror, a program to create Wikipedia clones
  that can be run locally, to provide control and unrestricted access
  to the wikipedia data set without depending on or abusing
  wikipedia.org.

* Εισαγωγή

** START

   The START Natural Language System είναι ένα σύστημα λογισμικού που
   έχει σχεδιαστεί για να απαντά σε ερωτήσεις που τίθενται σε αυτό σε
   φυσική γλώσσα. Το START σαρώνει τις εισερχόμενες ερωτήσεις, τις
   ταυτίζει με τα ερωτήματα που δημιουργούνται από τα parse trees, τις
   αναλύει σύμφωνα με την γνωστική του βάση και τελικά παρουσιάζει τα
   κατάλληλα τμήματα πληροφοριών για το χρήστη. Με τον τρόπο αυτό , το
   START παρέχει στους ανεκπαίδευτους χρήστες γρήγορη πρόσβαση σε γνώση
   που σε πολλές περιπτώσεις μπορεί να είναι χρονοβόρα ακόμα και για
   τον ειδικό να την αποκτήσει

   Το START (SynTactic Analysis using Reversible Transformations)
   δημιουργήθηκε από τον Dr Boris Katz στο Artificial Intelligence
   Laboratory του MIΤ. Επί του παρόντος, το σύστημα υφίσταται περαιτέρω
   ανάπτυξη από το InfoLab Group, με επικεφαλής τον Dr Boris Katz. Το
   START για πρώτη φορά συνδέθηκε με το World Wide Web το Δεκέμβριο του
   199 , και με τις διάφορες μορφές του έχει μέχρι σήμερα απαντήσει σε
   εκατομμύρια ερωτήσεις από χρήστες σε όλο τον κόσμο.

   Μια βασική τεχνική που ονομάζεται "natural language annotation"
   βοηθά το START να συνδέσει την αναζητούμενη πληροφορία με τις πηγές
   πληροφόρησης. Αυτή η τεχνική χρησιμοποιεί προτάσεις και φράσεις της
   φυσικής γλώσσας ως περιγραφές περιεχομένων που σχετίζονται με τα
   τμήματα πληροφοριών σε διάφορες υποδιαιρέσεις. Ένα τμήμα των
   πληροφοριών ανακτάται όταν ο σχολιασμός του ταιριάζει με την
   εισαγόμενη ερώτηση. Αυτή η μέθοδος επιτρέπει στο START να χειριστεί
   μεγάλη ποικιλία μέσων, συμπεριλαμβανομένων των κειμένων,
   διαγραμμάτων, εικόνων , βίντεο και ήχων, συνόλων δεδομένων,
   ιστοσελίδων και άλλων.

   Η επεξεργασία της φυσικής γλώσσας του START αποτελείται από δύο
   ενότητες που μοιράζονται την ίδια γραμματική. Η μονάδα κατανόησης
   αναλύει το αγγλικό κείμενο και παράγει μια γνωστική βάση που
   κωδικοποιεί πληροφορίες που βρίσκονται στο κείμενο. Λαμβάνοντας
   υπόψη ένα κατάλληλο τμήμα της βάσης δεδομένων, η μονάδα παραγωγής
   γλώσσας παράγει αγγλικές προτάσεις . Αυτές οι ενότητες σε συνδυασμό
   με την τεχνική της φυσικής γλώσσας σχολιασμού, δίνουν την δυνατότητα
   της παραγωγής φυσικής γλώσσας σε επίπεδο προτάσεων με χρήση σε
   υπηρεσίες πρόσβασης πληροφοριών διαφόρων πολυμέσων.

** Omnibase, wikipedia, WikipediaBase και Wikipedia-Mirror

   Omnibase είναι μια "εικονική" βάση δεδομένων που παρέχει μια ενιαία
   διεπαφή για πολλαπλές πηγές γνώσης στο Web , ικανή να εκτελεί τα
   δομημένα ερωτήματα που παράγονται από το START. Το Omnibase
   αναπτύχθηκε για πρώτη φορά το 2002 , περίπου το ίδιο χρονικό
   διάστημα που η wikipedia έκανε την πρώτη της εμφάνιση (2001).

   Η διαδικτυακή εγκυκλοπαίδεια Wikipedia είναι μια τεράστια, συνεχώς
   εξελισσόμενο δίκτυο από πλούσιες αλληλένδετες πληροφορίες σε μορφή
   κειμένου. Στην αυξανόμενη κοινότητα των νέων ερευνητών και
   προγραμματιστών είναι μια συνεχώς εξελισσόμενη πηγή χειροκίνητα
   οριζόμενων εννοιών και σημασιολογικών σχέσεω. Αποτελεί έναν
   απαράμιλλο και σε μεγάλο βαθμό ανεκμετάλλευτο πόρο για την
   επεξεργασία φυσικής γλώσσας προγραμματισμού, διαχείριση της γνώσης,
   εξόρυξη δεδομένων, και διάφορους άλλους τομείς έρευνας. Είναι το
   προϊόν της συνεργασίαςεργασία εκατομμυρίων ανθρώπων. Η Wikipedia
   βασίζεται στο σύστημα wiki, μια κατηγορία ιστοσελίδων που
   επιτρέπουν την συνεργατική τροποποίηση του περιεχομένου.

   Λόγω της πολυπλοκότητας και την ιδιαίτερα αδόμητη φύση της
   wikipedia αντί του omnibase backend START χρησιμοποιήσαμε μια
   ξεχωριστή υπηρεσία , το WikipediaBase, που αποτελεί και το
   αντικείμενο της παρούσας διατριβής. Επίσης, για να αποφευχθεί ο
   κορεσμός του wikiedpedia.org χρησιμοποιήσαμε το wikipedia - mirror
   δημιουργώντας έναν κλώνο της wikipedia για την WikipediaBase
   χρησιμοποιώ.

* Wikipediabase

  Η WikipediaBase είναι ένα backend για το START υπεύθυνη για την
  παροχή πρόσωασης σε πληροφορίες που σχετίζονται με την
  wikipedia. Μιμείται την διεπαφή API πουπροέρχεται από το Omnibase. Η
  Wikipediabase έχει ξαναγραφεί δυο φορές. Η αρχική έκδοση ήταν
  γραμμένη σε Java. Στη συνέχεια ξαναγραφτηκε σε Ruby διατηρώντας την
  αρχική αρχιτεκτονική και το σχεδιασμό και τώρα ξαναγράφεται σε
  python με νέο σχεδιασμό και αρχιτεκτονική.

  Υπάρχουν δύο βασικοί λόγοι για αυτό:Η Python διδάσκεται ως
  προπτυχιακό και μεταπτυχιακό μάθημα στο MIT , και ως εκ τούτου, μια
  βάση κώδικα σε Python θα κάνει την έναρξη των νέων φοιτητών του ΜΙΤ
  ομαλότερη. Το πιο σημαντικό όμως είναι ότι ενώ ο αρχικός σχεδιασμός
  του προηγούμενου WikipediaBase θα έπρεπε να ήταν επαρκής μεγάλωσε σε
  τέτοιο σημείο όπου ο κώδικας ήταν ad-hoc και δύσκολα να κατανοηθεί,
  λόγος για την επέκταση

  Η εφαρμογή python αρχικά γράφτηκε από τον Χρήστο Περιβολαρόπουλο σε
  στενή συνεργασία με την Dr Sue Felshin και τελικά παραδόθηκε στους
  Sue Felshin , Alvaro Morales και ton Michael Silver. Αργότερα και
  άλλοι φοιτητές έχουν ενταχθεί στο έργο.

** Λειτουργικότητα

   Στη WikipediaBase , το καθέ (υποστηριζόμενο) Wikipedia infobox
   ορίζεται ως class, και κάθε μεταβλητή στο infobox ορίζεται ως ένα
   χαρακτηριστικό της κάθε class. Όλα τα αντικείμενα της WikipediaBase
   ανήκουν κληρονομικά στην υπερκλάση wikibase-term, η οποία
   υποστηρίζει τα χαρακτηριστικά =IMAGE-DATA=, =SHORT-ARTICLE=, =URL=,
   =COORDINATES=, =PROPER=, και =NUMBER=.

   Οι εντολές της WikipediaBase και οι τιμές επιστροφής τους
   χρησιμοποιούν κωδικοποίηση σε s-expressions. Η WikipediaBase
   παρέχει τις ακόλουθες λειτουργίες:

*** get

    Δεδομένης μιας class, ενος ονόματος αντικειμένου, και ενός
    τυποποιημένου χαρακτηριστικού, δηλαδή ενός χαρακτηριστικού με
    typecode. Έγκυρα typecodes χαρακτηριστικών είναι =:code= (για ένα
    attribute όνομα όπως στο infobox wiki markup) και =:rendered= (
    για ένα attribute όνομα στο rendered form από το infobox).

**** Types

     Τα Scripts πρέπει να επιστρέφουν μια λίστα από τυποποιημένες
     τιμές, δηλαδή ενα ζευγάρι τιμής - typecode. Έγκυρα typecodes
     είναι:

***** =:HTML=

      Μια συμβολοσειρά προσαρμοσμένη για rendering σαν paragraph level
      HTML. Η συμβολοσειρά πρέπει να είναι escaped για lisp, εννοώντας
      quoted, και με double quotes και backslashes escaped με
      backslashes. Η συμβολοσειρά δεν απαιτείται να περιέχει HTML
      κώδικες. Για παράδειγμα:

      #+BEGIN_SRC lisp
        (get "wikipedia-sea" "Black Sea" (:code "AREA"))
        => ((:html "436,402 km2 (168,500 sq mi)"))

        (get "wikipedia-president" "Bill Clinton" (:code "SUCCESSOR"))
        => ((:html "George W. Bush"))

        (get "wikipedia-president" "Bill Clinton" (:rendered "Succeeded by"))
        => ((:html "George W. Bush"))

      #+END_SRC

***** =:YYYYMMDD=

      Οι αναλυμένες ημερομηνίες αντιπροσωπεύονται σαν αριθμοί,
      χρησιμοποιώντας τον τύπο =YYYYMMDD= με αρνητικούς αριθμούς
      αντιπροσωπεύονται οι πχ ημερομηνίες.

      (Οι μη αναλυμένες ημερομηνίες αντιπροσωπεύονται σαν HTML strings
      χρησιμοποιώντας το =:HTML= typecode.)

      #+BEGIN_SRC lisp
        (get "wikipedia-sea" "Black Sea" (:code "AREA"))
        => ((:html "436,402 km2 (168,500 sq mi)"))

        (get "wikipedia-president" "Bill Clinton" (:code "SUCCESSOR"))
        => ((:html "George W. Bush"))

        (get "wikipedia-president" "Bill Clinton" (:rendered "Succeeded by"))
        => ((:html "George W. Bush"))
      #+END_SRC

***** =:CALCULATED=

      Το Typecode για χαρακτηριστικά υπολογισμένα από την με βάση
      χαρακτηριστικά του άρθρου, πχ., =GENDER= and =NUMBER=. Βλέπε
      παρακάτω στο Special Attributes για την ολοκληρωμένη λίστα των
      υπολογισμένων attributes.

***** =:CODE=

      Ξεπερασμένο συνώνυμο του =:HTML=.

***** =:STRING=

      Ξεπερασμένο συνώνυμο του =:HTML=.

***** Special Attributes

      Μερικά χαρακτηριστικά είναι ειδικά επειδή υπολογίζονται από
      WikipediaBase αντί να είναι τραβηγμένα από infoboxes ή δεν
      παρέχονται άμεσα. Αυτά τα χαρακτηριστικά θα πρέπει να είναι
      ειδικά για =wikibase-term=, =wikibase-person=, και
      =wikipedia-paragraphs=.


****** =SHORT-ARTICLE=, =wikibase-term=

       Η πρώτη παράγραφος του άρθρου, ή αν η πρώτη παράγραφος είναι
       μικρότερη από 350 χαρακτήρες, τότε το μέρος της πρώτης
       παραγράφου έτσι ώστε το άθροισμα των χαρακτήρων να είναι
       τουλάχιστον 350.

       ii. =URL=, =wikibase-term=

       Επιστρέφει το URL του άρθρου ως =((:url URL))=

****** =IMAGE-DATA=, =wikibase-term=

       Επιστρέφει μια λίστα από URLs εικόνων στο περιεχόμενο του
       άρθρου (αποκλείει εικόνες που είναι στη σελίδα αλλά εκτός του
       περιεχομένου του άρθρου). Εάν δεν υπάρχουν εικόνες θα πρέπει να
       επιστρέφει μια κενή λίστα.

       Η "καλύτερη" εικόνα πρέπει να είναι η πρώτη της λίστας, εάν
       υπάρχει εικόνα στην κορυφή του infobox, αυτή θεωρείται η
       καλύτερη εικόνα, διαφορετικά είναι η πρώτη εικόνα που
       εμφανίζεται οπουδήποτε στο άρθρο. Εαν δεν υπάρχει caption, η
       τιμή του caption παραλείπεται

       π.χ., προτιμότερο =((0 "Harimau\_Harimau\_cover.jpg"))=

       από =((0 "Harimau\_Harimau\_cover.jpg" ""))=.


***** =COORDINATES=, =wikibase-term=

      Χαρακτηριστικά που δίνονται στο άρθρο υπολογιζόμενα από το
      γεωγραφικό πλάτος και το μήκος ή, εφόσον κανένα δεν μπορεί να
      βρεθεί, το infobox .  Η τιμή είναι μια λίστα του πλάτους και
      μήκους, πχ. =((:coordinates latitude longitude))=

      #+CAPTION: An example of coordinates in the header
      #+NAME:   fig:coordinate-example
      #+attr_latex: :placement [H] :width \textwidth
      [[./black-sea.png]]


***** =BIRTH-DATE=, =wikibase-person=

      Λαμβάνονται από το infobox ή αν δεν βρεθεί, λαμβάνονται από το άρθρο,

      ή αν δεν βρεθεί, από τις πληροφορίες της κατηγορίας του άρθρου.

      Βασίζεται πάντα στην πρώτη ημερομηνία γέννησης που εντοπίσθηκε και
      ταιριάζει σε μια από τις διάφορες υποστηριζόμενες μορφές. Αν αυτό το
      χαρακτηριστικό έχει μια τιμή,

      τότε το αντικείμενο θεωρείται ότι είναι ένα πρόσωπο με αξία

      στην ιδιότητα ΦΥΛΟ ( βλέπε παρακάτω ) .

      Η τιμή μπορεί να είναι μια a parsed or unparsed date. Parsed dates
      αντιπροσωπεύονται ως αριθμούς , χρησιμοποιώντας τη μορφή YYYYMMDD
      χρησιμοποιώντας αρνητικούς αριθμούς για τις ημερομηνίες Π.Χ.

      Unparsed dates are strings.

***** =DEATH-DATE=, =wikibase-person=

      Λαμβάνονται με παρόμοιο τρόπο όμως το BIRTH-DATE. Επιστρέφει την ίδια
      τιμή όπως

      BIRTH-DATE,εκτός αν το πρόσωπο ζει, τότε βγάζει λάθος τιμή με
      διευκρίνηση

      "Currently alive".

***** =GENDER=, =wikibase-person=

      Υπολογίζεται από το περιεχόμενο της σελίδας βασιζόμενο στα heuristics
      όπως ο αριθμός των ανδρικών ή των θηλυκών αντωνυμιών που
      χρησιμοποιούνται στο κείμενο

***** =NUMBER=, =wikibase-term=

      Το αν η περιγραφόμενη έννοια είναι ενικός ή
      πληθυντικός. Υπολογίζεται από το περιεχόμενο του κειμένου με
      βάση τα χαρακτηριστικά όπως ο αριθμός των φορών που ο τίτλος της
      σελίδας εμφανίζεται στον πληθυντικό. Έχει αξία για όλα τα
      αντικείμενα.

      Επιστρέφει =#t= είναι πληθυντικός, =#f= αν είναι ενικός.

***** =PROPER=, =wikibase-term=

      Το αν η περιγραφόμενη έννοια είναι κύριο όνομα. Υπολογίζεται από
      το περιεχόμενο του κειμένου με βάση τα χαρακτηριστικά όπως ο
      αριθμός των φορών που ο τίτλος της σελίδας εμφανίζεται με
      κεφαλαία γράμματα όταν δεν είναι στην αρχή της σελίδας. Έχει
      τιμή για όλα τα αντικείμενα.

      Επιστρέφει =#t= αν είναι κύριο όνομα, =#f= αν δεν είναι.

**** =get-classes=

     Δεδομένου του ονόματος ενός αντικειμένου , επιστρέφει μια λίστα
     με όλες τις classes οπου ανήκει το αντικείμενο, με τις classes να
     αντιπροσωπεύονται ως lisp-readable strings. Παραδοσιακά τα
     ονόματα των τάξεων δίνονται με μικρά γράμματα χωρίς όμως αυτό να
     είναι απολύτως απαραίτητο.

     #+BEGIN_SRC lisp
       (get-classes "Cardinal (bird)")
       => ("wikibase-term" "wikipedia-paragraphs" "wikipedia-taxobox")

       (get-classes "Hillary Rodham Clinton")
       => ("wikibase-term"
       "wikipedia-paragraphs"
       "wikibase-person"
       "wikipedia-officeholder"
       "wikipedia-person")
     #+END_SRC


**** =get-attributes=

     Δεδομένου του ονόματος μιας τάξης, επιστρέφει έναν κατάλογο με
     όλα τα χαρακτηριστικά της τάξης (δηλαδή όλες οι μεταβλητές που τα
     υλοποιεί infobox), ως lisp-readable strings. Τα ονόματα των
     χαρακτηριστικών δίνονται σε κεφαλαία γράμματα, αλλά αυτό δεν
     αποτελεί απόλυτη απαίτηση.

     #+BEGIN_SRC lisp
       (get-attributes "wikipedia-officeholder" "Barack Obama")
       => ((:CODE "TERM_END3" :VALUE :YYYYMMDD) ...)
     #+END_SRC


**** =Sort-symbols=

     Βάζοντας σε σειρά σύμβολα παίρνει κάθε σύνολο συμβόλων και τα βάζει σε
     σειρά δημιουργώντας υποσύνολα κατα μήκος του σχετικού άρθρου.

     #+BEGIN_SRC lisp
       (sort-symbols  "Obama (surname)" "Barack Obama")
       => (("Barack Obama") ("Obama (surname)"))
     #+END_SRC

**** =sort-symbols-named=

     παίρνει ένα συνώνυμο και ένα σύνολο συμβόλων και τα βάζει σε
     σειρά δημιουργώντας υποσύνολα. Εαν το symbol name είναι το ίδιο
     με το συνώνυμο, το ίδιο και το υποσύνολό του μπαίνουν στην αρχή.

     #+BEGIN_SRC lisp
       (sort-symbols-named
        "cake"
        "Cake (TV series)"
        "Cake (firework)"
        "Cake (film)"
        "Cake (drug)"
        "Cake"
        "Cake (band)"
        "Cake (advertisement)"
        "The Cake")
       => (("Cake")
       ("Cake (band)")
       ("Cake (advertisement)")
       ("Cake (TV series)")
       ("The Cake")
       ("Cake (film)")
       ("Cake (firework)")
       ("Cake (drug)"))
     #+END_SRC

** Getting started

   Η συνολική WikipediaBase βρίσκεται σε ένα git repository στο
   infolab's github orginization page.

   #+BEGIN_SRC sh
     git clone git@github.com:infolab-csail/WikipediaBase
   #+END_SRC

   Το =WikipediaBase= εξαρτάται από πολλά άλλα πακέτα python. Ευτυχώς,
   η python είναι shipped όχι μονο με ένα σπουδαίο package manager
   αλλά επίσης με ένα μηχανισμό που ονομάζεται =virtualenv= το οποίο
   απομονώνει την εγκατάσταση των εξαρτήσεων από το υπόλοιπο σύστημα,
   έτσι αποφεύγονται προβλήματα όπως ασυμβατότητα εκδόσεων.

   ή namespace collisions. Ο τρόπος που αυτό δουλεύει αποτελεσματικά είναι
   με το global

   python installation να είναι το μισό copied και το μισό symlinked σε ένα
   τοπικό directory και τα dependencies να είναι εγκαταστημένα μόνο σε ένα
   τοπικό sandbox.

   Για να δημιουργηθεί και να ενεργοποιηθεί ένα python virtualenv:

   #+BEGIN_SRC sh
     $ virtualenv --no-site-packages py
     $ . py/bin/activate
     $ which python
     /the/local/directory/py/bin/python
   #+END_SRC

   Τώρα που ασφαλώς τα έχουμε εγκαταστήσει όλα θέλουμε χωρίς να
   σπάσουμε κάποιο global installation


   #+BEGIN_SRC sh
     pip install -r requirements.txt
   #+END_SRC

   Θα χρειασθούμε μερικά επιπλέον εργαλεία για να δουλέψει η
   WikipediaBase που θα πρέπει να εγκατασταθούν system wide:

   - Postresql
   - Redis

   Η εγκατάσταση αυτών των πακέτων διαφέρει ανάλογα με το λειτουργικό
   σύστημα ή τον package manager. Και οι δύο είναι βάσεις δεδομένων. Ο
   σκοπός τους είναι η προσωρινή αποθήκευση επαναλαμβανόμενη
   υπολογισμών και για την αποθήκευση ahead-of-time υπολογισμού , όπως
   το όνομα infobox σήμανσης για καθίσταται χάρτες όνομα και συνώνυμα.

** Αρχιτεκτονική

*** Infobox

    Τα Ιnfoboxes είναι πίνακες που χρησιμοποιούνται συνήθως στη
    wikipedia για να παρέχουν μια επισκόπηση των πληροφοριών σε ένα
    άρθρο με ένα ημι δομημένο τρόπο . Infoboxes είναι η κύρια πηγή
    πληροφοριών για τη WikipediaBase


    #+CAPTION: Ένα παράδειγμα ενός infobox
    #+NAME:   fig:infobox-example
    #+attr_latex: :placement [H] :height 12cm
    [[./alonzo-church-infobox.png]]

    Σε ορους mediawiki markup, ένα infobox είναι ένα typed template
    που αποδίδεται σε html, έτσι ώστε οι παρεχόμενες πληροφορίες να
    έχουν νόημα στο πλαίσιο που παρέχονται. Για παράδειγμα:


    #+BEGIN_SRC text
      {{Infobox scientist
      | name              = Gerhard Gentzen
      | image             = Gerhard Gentzen.jpg
      | image_size        =
      | alt               =
      | caption           = Gerhard Gentzen in Prague, 1945.
      | birth_date        = {{Birth date|1909|11|24}}
      | birth_place       = [[Greifswald]], [[Germany]]
      | death_date        = {{Death date and age|1945|8|4|1909|11|24}}
      | death_place       = [[Prague]], [[Czechoslovakia]]
      | nationality       = [[Germany|German]]
      | fields            = [[Mathematics]]
      | workplaces        =
      | alma_mater        = [[University of Gottingen]]
      | doctoral_advisor  = [[Paul Bernays]]
      | doctoral_students =
      | known_for         =
      | awards            =
      }}
    #+END_SRC

    Θα παράξει το εξής¨

    #+CAPTION: Παράδειγμα εξαγωγής infobox
    #+NAME:   fig:redered-infobox-exampl
    #+attr_latex: :placement [H] :height 12cm

    Οι τύποι του Infobox είναι οργανωμένοι με μια αρκετά ευρεία
    ιεραρχία{{{ref(infobox_hierarchy)}}}. Για παράδειγμα
    =Template:Infobox Austrian district= είναι μια ειδική περίπτωση
    ενός =Template:Infobox settlement= και το καθένα είναι rendered
    διαφορετικά. Για το συγκεκριμένο σκοπό, και για να κάνουμε mirror
    το markup ορίζουμε τα infoboxes, ένα infobox \(I\) με
    χαρακτηριστικά \(a_i\) και τιμές \(v_i\) είναι ένα σύνολο από
    ζεύγη \(a_i, v_i\) μαζί με ένα τύπο infobox \(t\). Κάθε
    χαρακτηριστικό \(a_i\) και τιμή \(v_i\) έχουν 2 μορφές:

    - rendered μορφή, \(a^r_i\) και \(v^r_i\) αντίστοιχα, η rendered
      HTML αναπαράσταση
      - Η markup αναπαράσταση, \(a^m_i\) και \(v^m_i\) που είναι η
        mediawiki markup συμβολοσειρά


    Ένα άρθρο μπορεί να έχει περισσότερα από ένα infoboxes, για
    παράδειγμα, το άρθρο για τον Bill Clinton έχει δύο infobox: ένα
    για =Officeholder= και ένα για =Infobox President=. Η class
    =Infobox= είναι ο βασικός τύπος δεδομένων για την πρόσβαση σε
    πληροφορίες από το infobox ενός άρθρου. H =Infobox=, όπως και η
    =Article=, είναι αυτή που θα χρησιμοποιήσει κάποιος όταν
    χρησιμοποιεί τη wikipediabase ως βιβλιοθήκη Python. Οι μέθοδοι που
    παρέχονται από την Infobox δίνουν πρόσβαση στις εξής πληροφορίες:

    - Τυποι ::  επειδή έχουμε ανακτήσει Infobox βασισμένοι σε ένα
         όνομα συμβόλου (π.χ.όνομα της σελίδας ), ένα μοναδικό Infobox
         μπορεί στην πραγματικότητα να είναι μια διεπαφή για πολλαπλά
         infoboxes. Υπάρχει μια ξεχωριστή μέθοδος, που βασίζεται σε
         αυτό, για την ανάκτηση τύπων σε μορφή κατάλληλη για το START.

    - Τιμές αρακτηριστικών :: δεδομένης είτε \(a^r_i\) είτε \(a^m_i\).

    - Ονόματα χαρακτηριστικών :: που παρέχονται με τη χρήση του
         MetaInfobox ( βλέπε παρακάτω )
    - Εξαγωγή των πληροφοριών σε python types :: συγκεκριμένα
         - =dict= για \(a^r_i \rightarrow v^r_i\) or \(a^m_i \rightarrow
           v^m_i\)
         - Το συνολικό infobox rendered, ή σε ένα markup μορφή.

    Τα Infoboxes οργανώνονται σε μια ευρεία ιεραρχία το οποίο στον
    κώδικα του WikiepdiaBase αναφέρεται ως infobox tree. Τo infobox
    tree ανακτάται από τη λίστα της σελίδας wikipedia List of
    infoboxes και χρησιμοποιείται για να συνταχθεί η οντολογία των
    όρων wikipedia.

** MetaInfobox

   Το =MetaInfobox= υπλοποιείται ως μια υποκλάσση του =Infobox= που
   προσδίδει πληροφορία σχετικά με το infobox, εστιάζοντας στη
   αντιστοιχία της rendered μορφής των χαρακτηριστικών με την markup
   μορφή. Έτσι δεδομένου ενός infobox τύπου \(I\) έχει δυνατά
   χαρακτηριστικά \({a_1, ... , a_n}\). Κάθε χαρακτηριστικό έχει δύο
   αναπαραστάσεις:

   - τη markup αναπαράσταση που χρησιμοποιείται στο infobox template.
   - την HTML rendered αναπαράσταση, που είναι το κείμενο που φαίνεται
     στην αριστερή μεριά του πίνακα του infobox στη σελίδα.

   Παραδείγματος χάριν στο =officeholder= infobox υπάρχει ένα
   χαρακτηριστικό με markup αναπαράσταση =predecessor= και μία
   rendered αναπαράσταση =Preceded by=.

   Για να το πετύχει αυτό το =MetaInfobox= χρησιμοποιεί την σελίδα
   τεκμηρίωσης του template για να βρει το markup representation όλων
   των αποδεκτών χαρακτηριστικών ενός τύπου infobox. Στη συνέχεια
   δημιουργεί ένα infobox οπού κάθε χαρακτηριστικό έχει τιμή τη markup
   αναπαράσταση του χαρακτηριστικού αυτού, τυλιγμένη με τη
   συμβολοσειρά =!!!=. (Για παράδειγμα το χαρακτηριστικό με markup
   όνομα =predecessor= θα έχει τιμή =!!!predecessor!!!=). Στη συνέχει
   κανει render το infobox που δημιούργησε και ψάχνει για
   =!!!predecessor!!!= στις rendered τιμές. Θεωρούμε ότι οι τα
   αντίστοιχα rendered ονόματα αντιστοιχούν στα markup
   χαρακτηριστικά. Σημειώστε πως η αντιστοιχεία των rendered
   χαρακτηριστικών με τα markup χαρακτηριστικά δεν είναι αμφοσήμαντη,
   δηλαδή κάθε markup χαρακτηριστικό μπορεί να αντιστοιχεί σε μηδέν η
   περισσότερα rendered χαρακτηριστικά και το αντίστροφο.

   Για παράδειγμα για ένα infobox τύπου =Foo= με αποδεκτά χαρακτηριστικά /A/, /B/,
   /C/ και /D/ το =MetaInfobox= θα δημιουργούσε markup:

   #+BEGIN_EXAMPLE
     {{Infobox Foo
     | A = !!!A!!!
     | B = !!!B!!!
     | C = !!!C!!!
     | D = !!!D!!!
     }}
   #+END_EXAMPLE

   Και η rendered μορφή θα ήταν, ανάλογα με την υλοποίηση του =Foo=
   infobox.

   | Attribute | Value                   |
   |-----------+-------------------------|
   | A         | !!!A!!! !!!B!!! !!!C!!! |
   | B         | !!!A!!! !!!B!!! !!!C!!! |
   | C         | !!!A!!! !!!B!!! !!!C!!! |
   | D         | !!!D!!!                 |

   Έτσι η αντιστοιχία γίνεται σχετικά εμφανής.

** Article

   Η class =Article= είναι υπεύθυνη για την πρόσβαση σε κάθε πόρο
   σχετικό με το άρθρο γενικότερα. Αυτό περιλαμβάνει τις παραγράφους,
   επικεφαλίδες, τον πηγαίο markup κωδικα και τις κατηγορίες
   MediaWiki.

** Fetcher

   Η κλάση =Fetcher= είναι μια αφαίρεση από την επικοινωνία της
   WikipediaBase με τον έξω κόσμο. Είναι ένα μονήρες αντικείμενο που
   υλοποιεί μια συγκεκριμένη διεπαφή.

   Τα υλοποιημένα =Fetchers= σε κληρονομική ιεραρχία που φαίνεται από
   την παρακάτω λίστα.

   - =BaseFetcher= :: είναι η υπερκλάση όλων των fetchers. Θα
        επιστρέψει το ιδιο σύμβολο αντί να προσπαθήσει να το επιλύσει
        με οποιονδήποτε τρόπο. Κάνουμε override αυτή τη λειτουργία
        στις κληρονόμους κλάσεις για να υλοποιήσουμε τη λογική της
        διεπαφής με τον έξω κόσμο
   - =Fetcher= :: Υλοποιεί τη βασική λειτουργία. Αναζητά πληροφορίες
        απο το wikipedia.org. Είναι δυνατόν να κατευθύνουμε ένα
        fetcher αυτό προς ένα mirror αλλά η εκτέλεση σε
        wikipedia-mirror είναι από άποψη πόρων εκτέλεσης απαγορευτική.
   - =CachingFetcher= :: κληρονομεί fetcher και διατηρεί τη
        λειτουργικότητα , μόνο που χρησιμοποιεί Redis για την
        προσωρινή αποθήκευση των fetched συμβόλων .  Είναι η
        προεπιλεγμένη fetcher class.
   - =StaticFetcher= :: είναι μια κλάση που υλοποιεί το interface
        BaseFetcher αλλά αντί να φτάσει σε κάποια πηγή δεδομένων για
        τα δεδομένα η τιμές επιστροφής είναι στατικά
        ορισμένες. Χρησιμοποιείται κυρίως από το =MetaInfobox= για να
        χρησιμοποιεί τη λειτουργία του Infobox να μεταφέρει αυθαίρετες
        πληροφορίες.

   Από προεπιλογή, το markup προέρχεται μια βάση δεδομένων. Αν η
   παράμετρος =force_live= έχει οριστεί σε =True= τότε το markup θα
   ληφθεί από live wikipedia.org.  Όταν οι δοκιμές τρέχουν στο
   TravisCI{{{ref(travis)}}}, θέλουμε πάντα να χρησιμοποιούνται
   ζωντανά δεδομένα. Ελέγχουμε αν το Travis εκτελεί δοκιμές
   κοιτάζοντας τη μεταβλητή =WIKIPEDIABASE_FORCE_LIVE= μεταβλητή
   περιβάλλοντος.


* WikipediaMirror
* References
